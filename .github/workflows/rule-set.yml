name: Build rule-set
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "ads=https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml" >> $GITHUB_ENV
          echo "applications=https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt" >> $GITHUB_ENV
          echo "lan=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/private" >> $GITHUB_ENV
          echo "networktest=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.yaml" >> $GITHUB_ENV
          echo "microsoft_cn=https://rules.kr328.app/microsoft@cn.yaml" >> $GITHUB_ENV
          echo "apple_cn=https://rules.kr328.app/apple@cn.yaml" >> $GITHUB_ENV
          echo "google_cn=https://rules.kr328.app/google@cn.yaml" >> $GITHUB_ENV
          echo "games_cn1=https://rules.kr328.app/category-games@cn.yaml" >> $GITHUB_ENV
          echo "games_cn2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.yaml" >> $GITHUB_ENV
          echo "cn=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Domain.yaml" >> $GITHUB_ENV
          echo "telegramip=https://core.telegram.org/resources/cidr.txt" >> $GITHUB_ENV
          echo "lanip=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml" >> $GITHUB_ENV
          echo "cnip=https://raw.githubusercontent.com/DustinWin/clash-geoip/release/text/cn.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Checkout cokebar/gfwlist2dnsmasq
        uses: actions/checkout@v3
        with:
          repository: cokebar/gfwlist2dnsmasq
          path: gfwlist2dnsmasq

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: DustinWin/clash-ruleset

      - name: Generate ads
        run: |
          mkdir -p ./tmp ./publish
          curl -sSL ${ads} | grep -v '#' | sed '/^\s*$/d' > ./publish/ads.yaml

      - name: Generate applications
        run: |
          curl -sSL ${applications} | sed '/^\s*$/d' > ./publish/applications.yaml

      - name: Generate lan
        run: |
          curl -sSL ${lan} | grep -Ev '#|regexp:' | sed '/^\s*$/d' | sed '/^full:/!s/^/  - '\'+.'/g' | sed "s/^full:/  - '/g" | sed "s/$/'/g" | sed '1s/^/payload:\n/' > ./publish/lan.yaml

      - name: Generate networktest
        run: |
          curl -sSL ${networktest} | grep -v '#' > ./publish/networktest.yaml
          cat <<EOF >> ./publish/networktest.yaml
            - DOMAIN-KEYWORD,test-ipv6
            - DOMAIN-KEYWORD,testipv6
            - DOMAIN-KEYWORD,ipv6-test
            - DOMAIN-KEYWORD,ipv6test
          EOF

      - name: Generate microsoft-cn
        run: |
          curl -sSL ${microsoft_cn} | grep -Ev '#|payload:' | sed 's/"/'\''/g' | sed 's/^/  /g' | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/microsoft-cn.yaml

      - name: Generate apple-cn
        run: |
          curl -sSL ${apple_cn} | grep -Ev '#|payload:' | sed 's/"/'\''/g' | sed 's/^/  /g' | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/apple-cn.yaml

      - name: Generate google-cn
        run: |
          curl -sSL ${google_cn} | grep -Ev '#|payload:|googleapis\.cn' | sed 's/"/'\''/g' | sed 's/^/  /g' | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/google-cn.yaml

      - name: Generate games-cn
        run: |
          curl -sSL ${games_cn1} | grep -Ev '#|payload:' | sed 's/"/'\''/g' | sed 's/^/  /g' | sed '/^\s*$/d' > ./tmp/temp-games-cn.yaml
          curl -sSL ${games_cn2} | grep 'DOMAIN' | grep -Ev '#|DOMAIN-KEYWORD' | sed "s/DOMAIN-SUFFIX,/'+./g" | sed "s/DOMAIN,/'/g" | sed "s/$/'/g" | sed '/^\s*$/d' >> ./tmp/temp-games-cn.yaml
          sort --ignore-case -u ./tmp/temp-games-cn.yaml > ./tmp/games-cn.yaml
          echo "payload:" | cat - ./tmp/games-cn.yaml > ./publish/games-cn.yaml

      - name: Generate proxy
        run: |
          cd gfwlist2dnsmasq || exit 1
          chmod +x ./gfwlist2dnsmasq.sh
          ./gfwlist2dnsmasq.sh -l -o ../tmp/temp-proxy.yaml
          sed "s/^/  - '+./g" ../tmp/temp-proxy.yaml | sed "s/$/'/g" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ../publish/proxy.yaml

      - name: Generate cn
        run: |
          curl -sSL ${cn} | grep -Ev '#|google' > ./publish/cn.yaml

      - name: Generate telegramip
        run: |
          curl -sSL ${telegramip} | sed "s/^/  - '/g" | sed "s/$/'/g" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/telegramip.yaml

      - name: Generate lanip
        run: |
          curl -sSL ${lanip} | grep 'IP-CIDR' | grep -v '#' | sed "s/IP-CIDR6,/'/g" | sed "s/IP-CIDR,/'/g" | sed "s/$/'/g" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/lanip.yaml

      - name: Generate cnip
        run: |
          curl -sSL ${cnip} | sed "s/^/  - '/g" | sed "s/$/'/g" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/cnip.yaml

      - name: Generate fake-ip-user.yaml
        env:
          SED: sed 's/^/    - /' | sed '/^\s*$/d'
        run: |
          cat <<EOF > ./tmp/temp-fake-ip-user.txt
          dns:
            enable: true
            prefer-h3: true
            ipv6: true
            listen: 0.0.0.0:1053
            use-hosts: true
            fake-ip-range: 198.18.0.1/16
            enhanced-mode: fake-ip
            fake-ip-filter:
          EOF
          curl -sSL https://raw.githubusercontent.com/juewuy/ShellClash/master/public/fake_ip_filter.list | grep -v '#' | sed "s/.*/'&'/" | ${{ env.SED }} >> ./tmp/temp-fake-ip-user.txt
          curl -sSL https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt | grep -i '\.[A-Z]' | sed "s/^.*\/\//'/g" | sed "s/:.*\/.*/'/g" | ${{ env.SED }} >> ./tmp/temp-fake-ip-user.txt
          cat <<EOF >> ./tmp/temp-fake-ip-user.txt
              - 'static.adtidy.org'
              - 'adguardteam.github.io'
              - 'anti-ad.net'
            default-nameserver:
              - https://1.12.12.12/dns-query
              - https://223.5.5.5/dns-query
            nameserver:
              - https://doh.pub/dns-query
              - https://dns.alidns.com/dns-query
          EOF
          cat ./tmp/temp-fake-ip-user.txt > ./publish/fake-ip-user.yaml
          rm -f ./tmp/temp-fake-ip-user.txt

      - name: Generate redir-host-user.yaml
        run: |
          cat <<EOF > ./publish/redir-host-user.yaml
          dns:
            enable: true
            prefer-h3: true
            ipv6: true
            listen: 0.0.0.0:1053
            use-hosts: true
            fake-ip-range: 198.18.0.1/16
            enhanced-mode: fake-ip
            fake-ip-filter: ['+.*']
            default-nameserver:
              - https://1.12.12.12/dns-query
              - https://223.5.5.5/dns-query
            nameserver:
              - 'https://dns.google/dns-query#ü™ú ‰ª£ÁêÜÂüüÂêç'
              - https://cloudflare-dns.com/dns-query
            proxy-server-nameserver:
              - https://doh.pub/dns-query
              - https://dns.alidns.com/dns-query
            nameserver-policy:
              'rule-set:microsoft-cn,apple-cn,google-cn,games-cn': [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
              'rule-set:cn,lan': [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
          EOF

      - name: Move files
        run: |
          rm -rf ./tmp
          cd ./publish || exit 1

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: latest
          tag: latest
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd ./publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd ./publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
