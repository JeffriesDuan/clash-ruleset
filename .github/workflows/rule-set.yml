name: Build rule-set
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/generate-userconfig.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: DustinWin/clash-ruleset

      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Generate ads
        run: |
          mkdir -p ./tmp
          mkdir -p ./publish
          curl -sSL https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml | grep -v "#" | sed '/^\s*$/d' > ./publish/ads.yaml

      - name: Generate applications
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt | sed '/^\s*$/d' > ./publish/applications.yaml

      - name: Generate lan
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml | grep "DOMAIN" | grep -v "#" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/lan.yaml

      - name: Generate networktest
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.yaml | grep -v "#" | sed '/^\s*$/d' > ./tmp/temp-networktest.txt
          cat <<EOF >> ./tmp/temp-networktest.txt
            - DOMAIN-KEYWORD,test-ipv6
            - DOMAIN-KEYWORD,testipv6
            - DOMAIN-KEYWORD,ipv6-test
            - DOMAIN-KEYWORD,ipv6test
          EOF
          cat ./tmp/temp-networktest.txt > ./publish/networktest.yaml

      - name: Generate microsoft-cn
        run: |
          curl -sSL https://rules.kr328.app/microsoft@cn.yaml | grep -v "#" | sed 's/- "/  - \x27/g' | sed 's/"$/\x27/' | sed '/^\s*$/d' > ./publish/microsoft-cn.yaml

      - name: Generate apple-cn
        run: |
          curl -sSL https://rules.kr328.app/apple@cn.yaml | grep -v "#" | sed 's/- "/  - \x27/g' | sed 's/"$/\x27/' | sed '/^\s*$/d' > ./publish/apple-cn.yaml

      - name: Generate google-cn
        run: |
          curl -sSL https://rules.kr328.app/google@cn.yaml | grep -v "#" | grep -v 'googleapis\.cn' | sed 's/- "/  - \x27/g' | sed 's/"$/\x27/' | sed '/^\s*$/d' > ./publish/google-cn.yaml

      - name: Generate games-cn
        run: |
          curl -sSL https://rules.kr328.app/category-games@cn.yaml | grep -v "#" | grep -v 'googleapis\.cn' | sed 's/- "/  - \x27/g' | sed 's/"$/\x27/' | sed '/^\s*$/d' > ./publish/games-cn.yaml

      - name: Generate proxy
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Domain.yaml | grep -v "#" | sed '/^\s*$/d' > ./publish/proxy.yaml

      - name: Generate cn
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Domain.yaml | grep -v "#" | sed '/^\s*$/d' > ./publish/cn.yaml

      - name: Generate telegramip
        run: |
          curl -sSL https://core.telegram.org/resources/cidr.txt | sed "s/^/  - '/" | sed "s/\$/'/" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/telegramip.yaml

      - name: Generate lanip
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml | grep "IP-CIDR" | grep -v "#" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/lanip.yaml

      - name: Generate cnip
        run: |
          curl -sSL https://raw.githubusercontent.com/DustinWin/clash-geoip/release/text/cnip.txt | sed "s/^/  - '/" | sed "s/\$/'/" | sed '1s/^/payload:\n/' | sed '/^\s*$/d' > ./publish/cnip.yaml

      - name: Generate fake-ip-user.yaml
        env:
          SED: sed 's/^/    - /' | sed '/^\s*$/d'
        run: |
          cat <<EOF > ./tmp/temp-fake-ip-user.txt
          dns:
            enable: true
            prefer-h3: true
            ipv6: true
            listen: 0.0.0.0:1053
            use-hosts: true
            fake-ip-range: 198.18.0.1/16
            enhanced-mode: fake-ip
            fake-ip-filter:
          EOF
          curl -sSL https://raw.githubusercontent.com/juewuy/ShellClash/master/public/fake_ip_filter.list | grep -v "#" | grep -E "\*|\+" | sed "s/.*/'&'/" | ${{ env.SED }} >> ./tmp/temp-fake-ip-user.txt
          curl -sSL https://raw.githubusercontent.com/juewuy/ShellClash/master/public/fake_ip_filter.list | grep -v "#"  | grep -vE "\*|\+" | grep '\.' | ${{ env.SED }} >> ./tmp/temp-fake-ip-user.txt
          curl -sSL https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt | grep -i '\.[A-Z]' | sed 's/^.*\/\///g' | sed 's/:.*\/.*//g' | ${{ env.SED }} >> ./tmp/temp-fake-ip-user.txt
          cat <<EOF >> ./tmp/temp-fake-ip-user.txt
              - adguardteam.github.io
              - anti-ad.net
            default-nameserver:
              - https://1.12.12.12/dns-query
              - https://223.5.5.5/dns-query
            nameserver:
              - https://doh.pub/dns-query
              - https://dns.alidns.com/dns-query
          EOF
          cat ./tmp/temp-fake-ip-user.txt > ./publish/fake-ip-user.yaml
          rm -f ./tmp/temp-fake-ip-user.txt

      - name: Generate redir-host-user.yaml
        run: |
          cat <<EOF > ./publish/redir-host-user.yaml
          dns:
            enable: true
            prefer-h3: true
            ipv6: true
            listen: 0.0.0.0:1053
            use-hosts: true
            fake-ip-range: 198.18.0.1/16
            enhanced-mode: fake-ip
            fake-ip-filter: ['+.*']
            default-nameserver:
              - https://1.12.12.12/dns-query
              - https://223.5.5.5/dns-query
            nameserver:
              - 'https://dns.google/dns-query#ü™ú ‰ª£ÁêÜÂüüÂêç'
              - https://cloudflare-dns.com/dns-query
            proxy-server-nameserver:
              - https://doh.pub/dns-query
              - https://dns.alidns.com/dns-query
            nameserver-policy:
              'rule-set:microsoft-cn,apple-cn,google-cn,games-cn': [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
              'rule-set:direct,lan': [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
          EOF

      - name: Move files
        run: |
          rm -rf ./tmp
          cd ./publish || exit 1

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: latest
          tag: latest
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd ./publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd ./publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
